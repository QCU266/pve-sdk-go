// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type NodesLxcFirewallOptionsGetOptionsRequest struct {
	Node string `query:"node,omitempty"` // The cluster node name.
	Vmid int64  `query:"vmid,omitempty"` // The (unique) ID of the VM.
}

type NodesLxcFirewallOptionsGetOptionsResponse struct {
	Dhcp        *bool   `json:"dhcp,omitempty"`          // Enable DHCP.
	Enable      *bool   `json:"enable,omitempty"`        // Enable/disable firewall rules.
	Ipfilter    *bool   `json:"ipfilter,omitempty"`      // Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added.
	LogLevelIn  *string `json:"log_level_in,omitempty"`  // Log level for incoming traffic.
	LogLevelOut *string `json:"log_level_out,omitempty"` // Log level for outgoing traffic.
	Macfilter   *bool   `json:"macfilter,omitempty"`     // Enable/disable MAC address filter.
	Ndp         *bool   `json:"ndp,omitempty"`           // Enable NDP (Neighbor Discovery Protocol).
	PolicyIn    *string `json:"policy_in,omitempty"`     // Input policy.
	PolicyOut   *string `json:"policy_out,omitempty"`    // Output policy.
	Radv        *bool   `json:"radv,omitempty"`          // Allow sending Router Advertisement.
}

// Get VM firewall options.
// https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/lxc/{vmid}/firewall/options
func (c *Client) NodesLxcFirewallOptionsGetOptions(ctx context.Context, request *NodesLxcFirewallOptionsGetOptionsRequest) (*NodesLxcFirewallOptionsGetOptionsResponse, error) {

	method := "GET"
	path := "/nodes/{node}/lxc/{vmid}/firewall/options"

	var response NodesLxcFirewallOptionsGetOptionsResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
