// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type ClusterReplicationUpdateRequest struct {
	Comment   *string  `json:"comment,omitempty"`    // Description.
	Delete    *string  `json:"delete,omitempty"`     // A list of settings you want to delete.
	Digest    *string  `json:"digest,omitempty"`     // Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.
	Disable   *bool    `json:"disable,omitempty"`    // Flag to disable/deactivate the entry.
	Id        string   `json:"id,omitempty"`         // Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.
	Rate      *float64 `json:"rate,omitempty"`       // Rate limit in mbps (megabytes per second) as floating point number.
	RemoveJob *string  `json:"remove_job,omitempty"` // Mark the replication job for removal. The job will remove all local replication snapshots. When set to 'full', it also tries to remove replicated volumes on the target. The job then removes itself from the configuration file.
	Schedule  *string  `json:"schedule,omitempty"`   // Storage replication schedule. The format is a subset of `systemd` calendar events.
	Source    *string  `json:"source,omitempty"`     // For internal use, to detect if the guest was stolen.
}

type ClusterReplicationUpdateResponse struct{}

// Update replication job configuration.
// https://pve.proxmox.com/pve-docs/api-viewer/#/cluster/replication/{id}
func (c *Client) ClusterReplicationUpdate(ctx context.Context, request *ClusterReplicationUpdateRequest) (*ClusterReplicationUpdateResponse, error) {

	method := "PUT"
	path := "/cluster/replication/{id}"

	var response ClusterReplicationUpdateResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
