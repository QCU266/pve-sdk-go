// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type NodesStorageDownloadUrlDownloadUrlRequest struct {
	Checksum           *string `json:"checksum,omitempty"`            // The expected checksum of the file.
	ChecksumAlgorithm  *string `json:"checksum-algorithm,omitempty"`  // The algorithm to calculate the checksum of the file.
	Content            string  `json:"content,omitempty"`             // Content type.
	Filename           string  `json:"filename,omitempty"`            // The name of the file to create. Caution: This will be normalized!
	Node               string  `json:"node,omitempty"`                // The cluster node name.
	Storage            string  `json:"storage,omitempty"`             // The storage identifier.
	Url                string  `json:"url,omitempty"`                 // The URL to download the file from.
	VerifyCertificates *bool   `json:"verify-certificates,omitempty"` // If false, no SSL/TLS certificates will be verified.
}

type NodesStorageDownloadUrlDownloadUrlResponse string

// Download templates and ISO images by using an URL.
// https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/storage/{storage}/download-url
func (c *Client) NodesStorageDownloadUrlDownloadUrl(ctx context.Context, request *NodesStorageDownloadUrlDownloadUrlRequest) (*NodesStorageDownloadUrlDownloadUrlResponse, error) {

	method := "POST"
	path := "/nodes/{node}/storage/{storage}/download-url"

	var response NodesStorageDownloadUrlDownloadUrlResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
