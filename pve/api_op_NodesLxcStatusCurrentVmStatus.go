// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type NodesLxcStatusCurrentVmStatusRequest struct {
	Node string `query:"node,omitempty"` // The cluster node name.
	Vmid int64  `query:"vmid,omitempty"` // The (unique) ID of the VM.
}

// HA manager service status.
type NodesLxcStatusCurrentVmStatusResponseHa interface{}

type NodesLxcStatusCurrentVmStatusResponse struct {
	Cpus    *float64                                `json:"cpus,omitempty"`    // Maximum usable CPUs.
	Ha      NodesLxcStatusCurrentVmStatusResponseHa `json:"ha,omitempty"`      // HA manager service status.
	Lock    *string                                 `json:"lock,omitempty"`    // The current config lock, if any.
	Maxdisk *int64                                  `json:"maxdisk,omitempty"` // Root disk size in bytes.
	Maxmem  *int64                                  `json:"maxmem,omitempty"`  // Maximum memory in bytes.
	Maxswap *int64                                  `json:"maxswap,omitempty"` // Maximum SWAP memory in bytes.
	Name    *string                                 `json:"name,omitempty"`    // Container name.
	Status  string                                  `json:"status,omitempty"`  // LXC Container status.
	Tags    *string                                 `json:"tags,omitempty"`    // The current configured tags, if any.
	Uptime  *int64                                  `json:"uptime,omitempty"`  // Uptime.
	Vmid    int64                                   `json:"vmid,omitempty"`    // The (unique) ID of the VM.
}

// Get virtual machine status.
// https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/lxc/{vmid}/status/current
func (c *Client) NodesLxcStatusCurrentVmStatus(ctx context.Context, request *NodesLxcStatusCurrentVmStatusRequest) (*NodesLxcStatusCurrentVmStatusResponse, error) {

	method := "GET"
	path := "/nodes/{node}/lxc/{vmid}/status/current"

	var response NodesLxcStatusCurrentVmStatusResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
