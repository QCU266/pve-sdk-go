// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type NodesQemuAgentExecStatusExecStatusRequest struct {
	Node string `query:"node,omitempty"` // The cluster node name.
	Pid  int64  `query:"pid,omitempty"`  // The PID to query
	Vmid int64  `query:"vmid,omitempty"` // The (unique) ID of the VM.
}

type NodesQemuAgentExecStatusExecStatusResponse struct {
	ErrData      *string `json:"err-data,omitempty"`      // stderr of the process
	ErrTruncated *bool   `json:"err-truncated,omitempty"` // true if stderr was not fully captured
	Exitcode     *int64  `json:"exitcode,omitempty"`      // process exit code if it was normally terminated.
	Exited       bool    `json:"exited,omitempty"`        // Tells if the given command has exited yet.
	OutData      *string `json:"out-data,omitempty"`      // stdout of the process
	OutTruncated *bool   `json:"out-truncated,omitempty"` // true if stdout was not fully captured
	Signal       *int64  `json:"signal,omitempty"`        // signal number or exception code if the process was abnormally terminated.
}

// Gets the status of the given pid started by the guest-agent
// https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/qemu/{vmid}/agent/exec-status
func (c *Client) NodesQemuAgentExecStatusExecStatus(ctx context.Context, request *NodesQemuAgentExecStatusExecStatusRequest) (*NodesQemuAgentExecStatusExecStatusResponse, error) {

	method := "GET"
	path := "/nodes/{node}/qemu/{vmid}/agent/exec-status"

	var response NodesQemuAgentExecStatusExecStatusResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
