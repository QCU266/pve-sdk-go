// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type AccessDomainsSyncSyncRequest struct {
	DryRun         *bool   `json:"dry-run,omitempty"`         // If set, does not write anything.
	EnableNew      *bool   `json:"enable-new,omitempty"`      // Enable newly synced users immediately.
	Full           *bool   `json:"full,omitempty"`            // DEPRECATED: use 'remove-vanished' instead. If set, uses the LDAP Directory as source of truth, deleting users or groups not returned from the sync and removing all locally modified properties of synced users. If not set, only syncs information which is present in the synced data, and does not delete or modify anything else.
	Purge          *bool   `json:"purge,omitempty"`           // DEPRECATED: use 'remove-vanished' instead. Remove ACLs for users or groups which were removed from the config during a sync.
	Realm          string  `json:"realm,omitempty"`           // Authentication domain ID
	RemoveVanished *string `json:"remove-vanished,omitempty"` // A semicolon-seperated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync.
	Scope          *string `json:"scope,omitempty"`           // Select what to sync.
}

// Worker Task-UPID
type AccessDomainsSyncSyncResponse string

// Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting.
// https://pve.proxmox.com/pve-docs/api-viewer/#/access/domains/{realm}/sync
func (c *Client) AccessDomainsSyncSync(ctx context.Context, request *AccessDomainsSyncSyncRequest) (*AccessDomainsSyncSyncResponse, error) {

	method := "POST"
	path := "/access/domains/{realm}/sync"

	var response AccessDomainsSyncSyncResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
