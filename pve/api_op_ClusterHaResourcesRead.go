// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type ClusterHaResourcesReadRequest struct {
	Sid string `query:"sid,omitempty"` // HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).
}

type ClusterHaResourcesReadResponse struct {
	Comment     *string `json:"comment,omitempty"`      // Description.
	Digest      string  `json:"digest,omitempty"`       // Can be used to prevent concurrent modifications.
	Group       *string `json:"group,omitempty"`        // The HA group identifier.
	MaxRelocate *int64  `json:"max_relocate,omitempty"` // Maximal number of service relocate tries when a service failes to start.
	MaxRestart  *int64  `json:"max_restart,omitempty"`  // Maximal number of tries to restart the service on a node after its start failed.
	Sid         string  `json:"sid,omitempty"`          // HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).
	State       *string `json:"state,omitempty"`        // Requested resource state.
	Type        string  `json:"type,omitempty"`         // The type of the resources.
}

// Read resource configuration.
// https://pve.proxmox.com/pve-docs/api-viewer/#/cluster/ha/resources/{sid}
func (c *Client) ClusterHaResourcesRead(ctx context.Context, request *ClusterHaResourcesReadRequest) (*ClusterHaResourcesReadResponse, error) {

	method := "GET"
	path := "/cluster/ha/resources/{sid}"

	var response ClusterHaResourcesReadResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
