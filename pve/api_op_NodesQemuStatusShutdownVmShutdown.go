// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type NodesQemuStatusShutdownVmShutdownRequest struct {
	ForceStop  *bool  `json:"forceStop,omitempty"`  // Make sure the VM stops.
	KeepActive *bool  `json:"keepActive,omitempty"` // Do not deactivate storage volumes.
	Node       string `json:"node,omitempty"`       // The cluster node name.
	Skiplock   *bool  `json:"skiplock,omitempty"`   // Ignore locks - only root is allowed to use this option.
	Timeout    *int64 `json:"timeout,omitempty"`    // Wait maximal timeout seconds.
	Vmid       int64  `json:"vmid,omitempty"`       // The (unique) ID of the VM.
}

type NodesQemuStatusShutdownVmShutdownResponse string

// Shutdown virtual machine. This is similar to pressing the power button on a physical machine.This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.
// https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/qemu/{vmid}/status/shutdown
func (c *Client) NodesQemuStatusShutdownVmShutdown(ctx context.Context, request *NodesQemuStatusShutdownVmShutdownRequest) (*NodesQemuStatusShutdownVmShutdownResponse, error) {

	method := "POST"
	path := "/nodes/{node}/qemu/{vmid}/status/shutdown"

	var response NodesQemuStatusShutdownVmShutdownResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
