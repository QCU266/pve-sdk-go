// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type NodesQemuMoveDiskMoveVmDiskRequest struct {
	Bwlimit      *int64  `json:"bwlimit,omitempty"`       // Override I/O bandwidth limit (in KiB/s).
	Delete       *bool   `json:"delete,omitempty"`        // Delete the original disk after successful copy. By default the original disk is kept as unused disk.
	Digest       *string `json:"digest,omitempty"`        // Prevent changes if current configuration file has different SHA1" 		    ." digest. This can be used to prevent concurrent modifications.
	Disk         string  `json:"disk,omitempty"`          // The disk you want to move.
	Format       *string `json:"format,omitempty"`        // Target Format.
	Node         string  `json:"node,omitempty"`          // The cluster node name.
	Storage      *string `json:"storage,omitempty"`       // Target storage.
	TargetDigest *string `json:"target-digest,omitempty"` // Prevent changes if the current config file of the target VM has a" 		    ." different SHA1 digest. This can be used to detect concurrent modifications.
	TargetDisk   *string `json:"target-disk,omitempty"`   // The config key the disk will be moved to on the target VM (for example, ide0 or scsi1). Default is the source disk key.
	TargetVmid   *int64  `json:"target-vmid,omitempty"`   // The (unique) ID of the VM.
	Vmid         int64   `json:"vmid,omitempty"`          // The (unique) ID of the VM.
}

// the task ID.
type NodesQemuMoveDiskMoveVmDiskResponse string

// Move volume to different storage or to a different VM.
// https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/qemu/{vmid}/move_disk
func (c *Client) NodesQemuMoveDiskMoveVmDisk(ctx context.Context, request *NodesQemuMoveDiskMoveVmDiskRequest) (*NodesQemuMoveDiskMoveVmDiskResponse, error) {

	method := "POST"
	path := "/nodes/{node}/qemu/{vmid}/move_disk"

	var response NodesQemuMoveDiskMoveVmDiskResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
