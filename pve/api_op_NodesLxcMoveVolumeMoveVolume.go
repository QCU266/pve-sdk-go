// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type NodesLxcMoveVolumeMoveVolumeRequest struct {
	Bwlimit      *float64 `json:"bwlimit,omitempty"`       // Override I/O bandwidth limit (in KiB/s).
	Delete       *bool    `json:"delete,omitempty"`        // Delete the original volume after successful copy. By default the original is kept as an unused volume entry.
	Digest       *string  `json:"digest,omitempty"`        // Prevent changes if current configuration file has different SHA1 " . 		    "digest. This can be used to prevent concurrent modifications.
	Node         string   `json:"node,omitempty"`          // The cluster node name.
	Storage      *string  `json:"storage,omitempty"`       // Target Storage.
	TargetDigest *string  `json:"target-digest,omitempty"` // Prevent changes if current configuration file of the target " . 		    "container has a different SHA1 digest. This can be used to prevent " . 		    "concurrent modifications.
	TargetVmid   *int64   `json:"target-vmid,omitempty"`   // The (unique) ID of the VM.
	TargetVolume *string  `json:"target-volume,omitempty"` // The config key the volume will be moved to. Default is the source volume key.
	Vmid         int64    `json:"vmid,omitempty"`          // The (unique) ID of the VM.
	Volume       string   `json:"volume,omitempty"`        // Volume which will be moved.
}

type NodesLxcMoveVolumeMoveVolumeResponse string

// Move a rootfs-/mp-volume to a different storage or to a different container.
// https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/lxc/{vmid}/move_volume
func (c *Client) NodesLxcMoveVolumeMoveVolume(ctx context.Context, request *NodesLxcMoveVolumeMoveVolumeRequest) (*NodesLxcMoveVolumeMoveVolumeResponse, error) {

	method := "POST"
	path := "/nodes/{node}/lxc/{vmid}/move_volume"

	var response NodesLxcMoveVolumeMoveVolumeResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
