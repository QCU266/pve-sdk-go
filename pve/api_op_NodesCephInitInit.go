// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type NodesCephInitInitRequest struct {
	ClusterNetwork *string `json:"cluster-network,omitempty"` // Declare a separate cluster network, OSDs will routeheartbeat, object replication and recovery traffic over it
	DisableCephx   *bool   `json:"disable_cephx,omitempty"`   // Disable cephx authentication.  WARNING: cephx is a security feature protecting against man-in-the-middle attacks. Only consider disabling cephx if your network is private!
	MinSize        *int64  `json:"min_size,omitempty"`        // Minimum number of available replicas per object to allow I/O
	Network        *string `json:"network,omitempty"`         // Use specific network for all ceph related traffic
	Node           string  `json:"node,omitempty"`            // The cluster node name.
	PgBits         *int64  `json:"pg_bits,omitempty"`         // Placement group bits, used to specify the default number of placement groups.  NOTE: 'osd pool default pg num' does not work for default pools.
	Size           *int64  `json:"size,omitempty"`            // Targeted number of replicas per object
}

type NodesCephInitInitResponse struct{}

// Create initial ceph default configuration and setup symlinks.
// https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/ceph/init
func (c *Client) NodesCephInitInit(ctx context.Context, request *NodesCephInitInitRequest) (*NodesCephInitInitResponse, error) {

	method := "POST"
	path := "/nodes/{node}/ceph/init"

	var response NodesCephInitInitResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
