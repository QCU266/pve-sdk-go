// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type NodesQemuVmlistRequest struct {
	Full *bool  `query:"full,omitempty"` // Determine the full status of active VMs.
	Node string `query:"node,omitempty"` // The cluster node name.
}

type NodesQemuVmlistResponseItem struct {
	Cpus           *float64 `json:"cpus,omitempty"`            // Maximum usable CPUs.
	Lock           *string  `json:"lock,omitempty"`            // The current config lock, if any.
	Maxdisk        *int64   `json:"maxdisk,omitempty"`         // Root disk size in bytes.
	Maxmem         *int64   `json:"maxmem,omitempty"`          // Maximum memory in bytes.
	Name           *string  `json:"name,omitempty"`            // VM name.
	Pid            *int64   `json:"pid,omitempty"`             // PID of running qemu process.
	Qmpstatus      *string  `json:"qmpstatus,omitempty"`       // Qemu QMP agent status.
	RunningMachine *string  `json:"running-machine,omitempty"` // The currently running machine type (if running).
	RunningQemu    *string  `json:"running-qemu,omitempty"`    // The currently running QEMU version (if running).
	Status         string   `json:"status,omitempty"`          // Qemu process status.
	Tags           *string  `json:"tags,omitempty"`            // The current configured tags, if any
	Uptime         *int64   `json:"uptime,omitempty"`          // Uptime.
	Vmid           int64    `json:"vmid,omitempty"`            // The (unique) ID of the VM.
}

type NodesQemuVmlistResponse []NodesQemuVmlistResponseItem

// Virtual machine index (per node).
// https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/qemu
func (c *Client) NodesQemuVmlist(ctx context.Context, request *NodesQemuVmlistRequest) (*NodesQemuVmlistResponse, error) {

	method := "GET"
	path := "/nodes/{node}/qemu"

	var response NodesQemuVmlistResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
