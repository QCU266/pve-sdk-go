// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type AccessDomainsUpdateRequest struct {
	AcrValues           *string `json:"acr-values,omitempty"`            // Specifies the Authentication Context Class Reference values that theAuthorization Server is being requested to use for the Auth Request.
	Autocreate          *bool   `json:"autocreate,omitempty"`            // Automatically create users if they do not exist.
	BaseDn              *string `json:"base_dn,omitempty"`               // LDAP base domain name
	BindDn              *string `json:"bind_dn,omitempty"`               // LDAP bind domain name
	Capath              *string `json:"capath,omitempty"`                // Path to the CA certificate store
	CaseSensitive       *bool   `json:"case-sensitive,omitempty"`        // username is case-sensitive
	Cert                *string `json:"cert,omitempty"`                  // Path to the client certificate
	Certkey             *string `json:"certkey,omitempty"`               // Path to the client certificate key
	ClientId            *string `json:"client-id,omitempty"`             // OpenID Client ID
	ClientKey           *string `json:"client-key,omitempty"`            // OpenID Client Key
	Comment             *string `json:"comment,omitempty"`               // Description.
	Default             *bool   `json:"default,omitempty"`               // Use this as default realm
	Delete              *string `json:"delete,omitempty"`                // A list of settings you want to delete.
	Digest              *string `json:"digest,omitempty"`                // Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.
	Domain              *string `json:"domain,omitempty"`                // AD domain name
	Filter              *string `json:"filter,omitempty"`                // LDAP filter for user sync.
	GroupClasses        *string `json:"group_classes,omitempty"`         // The objectclasses for groups.
	GroupDn             *string `json:"group_dn,omitempty"`              // LDAP base domain name for group sync. If not set, the base_dn will be used.
	GroupFilter         *string `json:"group_filter,omitempty"`          // LDAP filter for group sync.
	GroupNameAttr       *string `json:"group_name_attr,omitempty"`       // LDAP attribute representing a groups name. If not set or found, the first value of the DN will be used as name.
	IssuerUrl           *string `json:"issuer-url,omitempty"`            // OpenID Issuer Url
	Mode                *string `json:"mode,omitempty"`                  // LDAP protocol mode.
	Password            *string `json:"password,omitempty"`              // LDAP bind password. Will be stored in '/etc/pve/priv/realm/<REALM>.pw'.
	Port                *int64  `json:"port,omitempty"`                  // Server port.
	Prompt              *string `json:"prompt,omitempty"`                // Specifies whether the Authorization Server prompts the End-User for reauthentication and consent.
	Realm               string  `json:"realm,omitempty"`                 // Authentication domain ID
	Scopes              *string `json:"scopes,omitempty"`                // Specifies the scopes (user details) that should be authorized and returned, for example 'email' or 'profile'.
	Secure              *bool   `json:"secure,omitempty"`                // Use secure LDAPS protocol. DEPRECATED: use 'mode' instead.
	Server1             *string `json:"server1,omitempty"`               // Server IP address (or DNS name)
	Server2             *string `json:"server2,omitempty"`               // Fallback Server IP address (or DNS name)
	Sslversion          *string `json:"sslversion,omitempty"`            // LDAPS TLS/SSL version. It's not recommended to use version older than 1.2!
	SyncDefaultsOptions *string `json:"sync-defaults-options,omitempty"` // The default options for behavior of synchronizations.
	SyncAttributes      *string `json:"sync_attributes,omitempty"`       // Comma separated list of key=value pairs for specifying which LDAP attributes map to which PVE user field. For example, to map the LDAP attribute 'mail' to PVEs 'email', write  'email=mail'. By default, each PVE user field is represented  by an LDAP attribute of the same name.
	Tfa                 *string `json:"tfa,omitempty"`                   // Use Two-factor authentication.
	UserAttr            *string `json:"user_attr,omitempty"`             // LDAP user attribute name
	UserClasses         *string `json:"user_classes,omitempty"`          // The objectclasses for users.
	Verify              *bool   `json:"verify,omitempty"`                // Verify the server's SSL certificate
}

type AccessDomainsUpdateResponse struct{}

// Update authentication server settings.
// https://pve.proxmox.com/pve-docs/api-viewer/#/access/domains/{realm}
func (c *Client) AccessDomainsUpdate(ctx context.Context, request *AccessDomainsUpdateRequest) (*AccessDomainsUpdateResponse, error) {

	method := "PUT"
	path := "/access/domains/{realm}"

	var response AccessDomainsUpdateResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
