// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type ClusterOptionsSetOptionsRequest struct {
	Bwlimit           *string `json:"bwlimit,omitempty"`            // Set bandwidth/io limits various operations.
	Console           *string `json:"console,omitempty"`            // Select the default Console viewer. You can either use the builtin java applet (VNC; deprecated and maps to html5), an external virt-viewer comtatible application (SPICE), an HTML5 based vnc viewer (noVNC), or an HTML5 based console client (xtermjs). If the selected viewer is not available (e.g. SPICE not activated for the VM), the fallback is noVNC.
	Crs               *string `json:"crs,omitempty"`                // Cluster resource scheduling settings.
	Delete            *string `json:"delete,omitempty"`             // A list of settings you want to delete.
	Description       *string `json:"description,omitempty"`        // Datacenter description. Shown in the web-interface datacenter notes panel. This is saved as comment inside the configuration file.
	EmailFrom         *string `json:"email_from,omitempty"`         // Specify email address to send notification from (default is root@$hostname)
	Fencing           *string `json:"fencing,omitempty"`            // Set the fencing mode of the HA cluster. Hardware mode needs a valid configuration of fence devices in /etc/pve/ha/fence.cfg. With both all two modes are used.  WARNING: 'hardware' and 'both' are EXPERIMENTAL & WIP
	Ha                *string `json:"ha,omitempty"`                 // Cluster wide HA settings.
	HttpProxy         *string `json:"http_proxy,omitempty"`         // Specify external http proxy which is used for downloads (example: 'http://username:password@host:port/')
	Keyboard          *string `json:"keyboard,omitempty"`           // Default keybord layout for vnc server.
	Language          *string `json:"language,omitempty"`           // Default GUI language.
	MacPrefix         *string `json:"mac_prefix,omitempty"`         // Prefix for autogenerated MAC addresses.
	MaxWorkers        *int64  `json:"max_workers,omitempty"`        // Defines how many workers (per node) are maximal started  on actions like 'stopall VMs' or task from the ha-manager.
	Migration         *string `json:"migration,omitempty"`          // For cluster wide migration settings.
	MigrationUnsecure *bool   `json:"migration_unsecure,omitempty"` // Migration is secure using SSH tunnel by default. For secure private networks you can disable it to speed up migration. Deprecated, use the 'migration' property instead!
	NextId            *string `json:"next-id,omitempty"`            // Control the range for the free VMID auto-selection pool.
	RegisteredTags    *string `json:"registered-tags,omitempty"`    // A list of tags that require a `Sys.Modify` on '/' to set and delete. Tags set here that are also in 'user-tag-access' also require `Sys.Modify`.
	TagStyle          *string `json:"tag-style,omitempty"`          // Tag style options.
	U2F               *string `json:"u2f,omitempty"`                // u2f
	UserTagAccess     *string `json:"user-tag-access,omitempty"`    // Privilege options for user-settable tags
	Webauthn          *string `json:"webauthn,omitempty"`           // webauthn configuration
}

type ClusterOptionsSetOptionsResponse struct{}

// Set datacenter options.
// https://pve.proxmox.com/pve-docs/api-viewer/#/cluster/options
func (c *Client) ClusterOptionsSetOptions(ctx context.Context, request *ClusterOptionsSetOptionsRequest) (*ClusterOptionsSetOptionsResponse, error) {

	method := "PUT"
	path := "/cluster/options"

	var response ClusterOptionsSetOptionsResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
