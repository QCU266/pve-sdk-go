// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type ClusterConfigJoinJoinRequest struct {
	Fingerprint string  `json:"fingerprint,omitempty"` // Certificate SHA 256 fingerprint.
	Force       *bool   `json:"force,omitempty"`       // Do not throw error if node already exists.
	Hostname    string  `json:"hostname,omitempty"`    // Hostname (or IP) of an existing cluster member.
	Linkn       *string `json:"link[n],omitempty"`     // Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)
	Nodeid      *int64  `json:"nodeid,omitempty"`      // Node id for this node.
	Password    string  `json:"password,omitempty"`    // Superuser (root) password of peer node.
	Votes       *int64  `json:"votes,omitempty"`       // Number of votes for this node
}

type ClusterConfigJoinJoinResponse string

// Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).
// https://pve.proxmox.com/pve-docs/api-viewer/#/cluster/config/join
func (c *Client) ClusterConfigJoinJoin(ctx context.Context, request *ClusterConfigJoinJoinRequest) (*ClusterConfigJoinJoinResponse, error) {

	method := "POST"
	path := "/cluster/config/join"

	var response ClusterConfigJoinJoinResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
