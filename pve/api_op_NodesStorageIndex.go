// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type NodesStorageIndexRequest struct {
	Content *string `query:"content,omitempty"` // Only list stores which support this content type.
	Enabled *bool   `query:"enabled,omitempty"` // Only list stores which are enabled (not disabled in config).
	Format  *bool   `query:"format,omitempty"`  // Include information about formats
	Node    string  `query:"node,omitempty"`    // The cluster node name.
	Storage *string `query:"storage,omitempty"` // Only list status for  specified storage
	Target  *string `query:"target,omitempty"`  // If target is different to 'node', we only lists shared storages which content is accessible on this 'node' and the specified 'target' node.
}

type NodesStorageIndexResponse []NodesStorageIndexResponseItem

type NodesStorageIndexResponseItem struct {
	Active       *bool    `json:"active,omitempty"`        // Set when storage is accessible.
	Avail        *int64   `json:"avail,omitempty"`         // Available storage space in bytes.
	Content      string   `json:"content,omitempty"`       // Allowed storage content types.
	Enabled      *bool    `json:"enabled,omitempty"`       // Set when storage is enabled (not disabled).
	Shared       *bool    `json:"shared,omitempty"`        // Shared flag from storage configuration.
	Storage      string   `json:"storage,omitempty"`       // The storage identifier.
	Total        *int64   `json:"total,omitempty"`         // Total storage space in bytes.
	Type         string   `json:"type,omitempty"`          // Storage type.
	Used         *int64   `json:"used,omitempty"`          // Used storage space in bytes.
	UsedFraction *float64 `json:"used_fraction,omitempty"` // Used fraction (used/total).
}

// Get status for all datastores.
// https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/storage
func (c *Client) NodesStorageIndex(ctx context.Context, request *NodesStorageIndexRequest) (*NodesStorageIndexResponse, error) {

	method := "GET"
	path := "/nodes/{node}/storage"

	var response NodesStorageIndexResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
