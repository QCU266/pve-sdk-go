// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type ClusterSdnZonesUpdateRequest struct {
	AdvertiseSubnets         *bool   `json:"advertise-subnets,omitempty"`           // Advertise evpn subnets if you have silent hosts
	Bridge                   *string `json:"bridge,omitempty"`                      //
	BridgeDisableMacLearning *bool   `json:"bridge-disable-mac-learning,omitempty"` // Disable auto mac learning.
	Controller               *string `json:"controller,omitempty"`                  // Frr router name
	Delete                   *string `json:"delete,omitempty"`                      // A list of settings you want to delete.
	Digest                   *string `json:"digest,omitempty"`                      // Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.
	DisableArpNdSuppression  *bool   `json:"disable-arp-nd-suppression,omitempty"`  // Disable ipv4 arp && ipv6 neighbour discovery suppression
	Dns                      *string `json:"dns,omitempty"`                         // dns api server
	Dnszone                  *string `json:"dnszone,omitempty"`                     // dns domain zone  ex: mydomain.com
	DpId                     *int64  `json:"dp-id,omitempty"`                       // Faucet dataplane id
	Exitnodes                *string `json:"exitnodes,omitempty"`                   // List of cluster node names.
	ExitnodesLocalRouting    *bool   `json:"exitnodes-local-routing,omitempty"`     // Allow exitnodes to connect to evpn guests
	ExitnodesPrimary         *string `json:"exitnodes-primary,omitempty"`           // Force traffic to this exitnode first.
	Ipam                     *string `json:"ipam,omitempty"`                        // use a specific ipam
	Mac                      *string `json:"mac,omitempty"`                         // Anycast logical router mac address
	Mtu                      *int64  `json:"mtu,omitempty"`                         // MTU
	Nodes                    *string `json:"nodes,omitempty"`                       // List of cluster node names.
	Peers                    *string `json:"peers,omitempty"`                       // peers address list.
	Reversedns               *string `json:"reversedns,omitempty"`                  // reverse dns api server
	RtImport                 *string `json:"rt-import,omitempty"`                   // Route-Target import
	Tag                      *int64  `json:"tag,omitempty"`                         // Service-VLAN Tag
	VlanProtocol             *string `json:"vlan-protocol,omitempty"`               //
	VrfVxlan                 *int64  `json:"vrf-vxlan,omitempty"`                   // l3vni.
	Zone                     string  `json:"zone,omitempty"`                        // The SDN zone object identifier.
}

type ClusterSdnZonesUpdateResponse struct{}

// Update sdn zone object configuration.
// https://pve.proxmox.com/pve-docs/api-viewer/#/cluster/sdn/zones/{zone}
func (c *Client) ClusterSdnZonesUpdate(ctx context.Context, request *ClusterSdnZonesUpdateRequest) (*ClusterSdnZonesUpdateResponse, error) {

	method := "PUT"
	path := "/cluster/sdn/zones/{zone}"

	var response ClusterSdnZonesUpdateResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
