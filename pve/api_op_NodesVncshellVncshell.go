// Code generated by gen-api. DO NOT EDIT.

package pve

import (
	"context"
)

type NodesVncshellVncshellRequest struct {
	Cmd       *string `json:"cmd,omitempty"`       // Run specific command or default to login.
	CmdOpts   *string `json:"cmd-opts,omitempty"`  // Add parameters to a command. Encoded as null terminated strings.
	Height    *int64  `json:"height,omitempty"`    // sets the height of the console in pixels.
	Node      string  `json:"node,omitempty"`      // The cluster node name.
	Websocket *bool   `json:"websocket,omitempty"` // use websocket instead of standard vnc.
	Width     *int64  `json:"width,omitempty"`     // sets the width of the console in pixels.
}

type NodesVncshellVncshellResponse struct {
	Cert   string `json:"cert,omitempty"`   //
	Port   int64  `json:"port,omitempty"`   //
	Ticket string `json:"ticket,omitempty"` //
	Upid   string `json:"upid,omitempty"`   //
	User   string `json:"user,omitempty"`   //
}

// Creates a VNC Shell proxy.
// https://pve.proxmox.com/pve-docs/api-viewer/#/nodes/{node}/vncshell
func (c *Client) NodesVncshellVncshell(ctx context.Context, request *NodesVncshellVncshellRequest) (*NodesVncshellVncshellResponse, error) {

	method := "POST"
	path := "/nodes/{node}/vncshell"

	var response NodesVncshellVncshellResponse

	err := c.apiCall(ctx, method, path, request, &response)
	if err != nil {
		return nil, err
	}

	return &response, nil
}
